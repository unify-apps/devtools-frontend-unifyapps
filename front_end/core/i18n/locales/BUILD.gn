# Copyright 2022 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../../scripts/build/ninja/minify_json.gni")
import("../../../../scripts/build/ninja/node.gni")

import("//$devtools_root_location/config/gni/i18n.gni")

node_action("collect_strings") {
  script = "front_end/core/i18n/collect-ui-strings.js"

  args = [ "--input-directories" ]
  foreach(dir, devtools_collection_directories) {
    args += [ rebase_path(dir, root_build_dir) ]
  }
  args += [
    "--output-directory",
    rebase_path("$target_gen_dir/generated", root_build_dir),
  ]

  outputs = [ "$target_gen_dir/generated/en-US.json" ]
  if (include_en_xl) {
    args += [ "--include-en-xl" ]
    outputs += [ "$target_gen_dir/generated/en-XL.json" ]
  }

  depfile = "$target_gen_dir/generated/collected-ui-strings.d"
}

generated_locales = [ "en-US" ]
if (include_en_xl) {
  generated_locales += [ "en-XL" ]
}

minify_json("i18n_locales") {
  sources = []
  foreach(
      locale,
      remote_devtools_locales + bundled_devtools_locales - generated_locales) {
    sources += [ "$devtools_locale_directory/$locale.json" ]
  }

  sources += get_target_outputs(":collect_strings")

  deps = [ ":collect_strings" ]
}

# Copy locales to two folders away
copy("copy_locales") {
  # Define the destination directory (two folders up)
  _dest_dir = target_gen_dir + "/../../../locales"

  sources = []

  # Add all bundled locales as sources
  foreach(locale, bundled_devtools_locales) {
    sources += [ "$target_gen_dir/$locale.json" ]
  }

  # Use source expansion - {{source_file_part}} gets replaced with just the filename
  outputs = [ "$_dest_dir/{{source_file_part}}" ]

  deps = [ ":i18n_locales" ]
}

group("locales") {
  public_deps = [ 
    ":i18n_locales",
    ":copy_locales",  # Add dependency on copy action
  ]

  # Update data to point to the copied files (two folders up)
  _copied_locales_dir = target_gen_dir + "/../../../locales"

  data = []

  foreach(locale, bundled_devtools_locales) {
    data += [ "$_copied_locales_dir/$locale.json" ]
  }

  metadata = {
    grd_files = data
  }
}